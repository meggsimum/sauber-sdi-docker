version: "3.7"

networks:
    sauber-network:
        attachable: true

volumes:
    db_data:
    lubw_data:
    geoserver_data:
    raster_data:
    um_data:
    um_logs:
    um_licence:
    um_users:

secrets:
    postgrest_password:
        file: ./secrets/pgrst_password.txt
        name: pgrest_password_v2
    postgrest_jwt_secret:
        file: ./secrets/pgrst_jwt_secret.txt
        name: pgrest_sauber_v2
    lubw_user:
        file: ./secrets/lubw_user.txt
        name: lubw_user_v1
    lubw_password:
        file: ./secrets/lubw_password.txt
        name: lubw_password_v1
    lubw_server:
        file: ./secrets/lubw_server.txt
        name: lubw_server_v1
    geoserver_user:
        file: ./secrets/geoserver_user.txt
        name: geoserver_user_v1
    geoserver_password:
        file: ./secrets/geoserver_password.txt
        name: geoserver_password_v1
    sauber_user_password:
        file: ./secrets/sauber_user_password.txt
        name: sauber_user_password_v1
    sauber_manager_password:
        file: ./secrets/sauber_manager_password.txt
        name: sauber_manager_password_v1
    postgres_init_password:
        file: ./secrets/postgres_init_password.txt
        name: hhi_rest_user_v1
    hhi_rest_user:
        file: ./secrets/hhi_rest_user.txt
        name: postgres_init_password_v1
    hhi_rest_pw:
        file: ./secrets/hhi_rest_pw.txt
        name: hhi_rest_pw_v1

services:

    db:
        image: "sauberprojekt/postgis_alpine:20200701_1"
        networks:
            - sauber-network
        volumes:
            - db_data:/var/lib/postgresql/data
        secrets:
            - postgrest_jwt_secret
            - postgrest_password
            - sauber_manager_password
            - sauber_user_password
            - postgres_init_password
        environment:
            - PGRST_PASSWORD_FILE=/run/secrets/postgrest_password
            - PGRST_JWT_SECRET_FILE=/run/secrets/postgrest_jwt_secret
            - SAUBER_MANAGER_PASSWORD_FILE=/run/secrets/sauber_manager_password
            - SAUBER_USER_PASSWORD_FILE=/run/secrets/sauber_user_password
            - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_init_password
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        ports:
            - "5440:5432"

    geoserver:
        image: "meggsimum/geoserver"
        networks:
            - sauber-network
        secrets:
            - geoserver_user
            - geoserver_password
        environment:
            - USE_CORS=1
            - USE_VECTOR_TILES=1
            - EXTRA_JAVA_OPTS=-Xms1g -Xmx2g
        volumes:
            - ./geoserver_mnt/geoserver_data:/opt/geoserver_data/:Z
            - ./geoserver_mnt/raster_data:/opt/raster_data:Z
           # - ./geoserver_mnt/additional_libs:/opt/additional_libs/:Z
           # - raster_data/:/opt/raster_data:Z
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        depends_on:
            - db
        ports:
            - "8080:8080"

    postgrest_raster_publisher:
        image: "sauberprojekt/postgrest:20200701_1"
        networks:
            - sauber-network
        secrets:
            - postgrest_jwt_secret
            - postgrest_password
        environment:
            - PGRST_PASSWORD_FILE=/run/secrets/postgrest_password
            - PGRST_USER=authenticator
            - PGRST_DB_POOL=5
            - PGRST_MAX_ROWS=100
            - PGRST_JWT_SECRET_FILE=/run/secrets/postgrest_jwt_secret
            - PGRST_DB_SERVER=db
            - PGRST_DB_PORT=5432
            - PGRST_DB_NAME=sauber_data
            - PGRST_DB_SCHEMA=image_mosaics
            - PGRST_DB_ANON_ROLE=anon
        deploy:
            restart_policy:
             condition: on-failure
        depends_on:
            - db
        ports:
            - "3000:3000"

    geoserver_raster_publisher:
      image: "sauberprojekt/geoserver_raster_publisher:20200701_1"
      networks:
          - sauber-network
      secrets:
          - postgrest_password
          - geoserver_user
          - geoserver_password
      environment:
          - GSPUB_PG_REST_URL=/run/secrets/postgrest_password
          - GSPUB_PG_REST_USER=anon
          - GSPUB_GS_REST_URL=http://geoserver:8080/geoserver/rest/
      deploy:
          restart_policy:
            condition: on-failure
      depends_on:
          - postgrest_raster_publisher
          - geoserver

    um_server:
        image: "store/softwareag/universalmessaging-server:10.5"
        networks:
            - sauber-network
        # secrets:
        # environment:
        deploy:
            restart_policy:
             condition: on-failure
        # depends_on:
        # healthcheck:
        volumes:
            - um_data:/opt/softwareag/UniversalMessaging/server/umserver/data
            - um_logs:/opt/softwareag/UniversalMessaging/server/umserver/logs
            - um_licence:/opt/softwareag/UniversalMessaging/server/umserver/licence
            - um_users:/opt/softwareag/common/conf
        ports:
            - "9876:9000"

    test_messenger:
        image: "sauberprojekt/test_messenger:20200720_1"
        networks:
            - sauber-network
#       secrets:
        environment:
            - UM_SERVER=um_server:9000
            - UM_CHANNEL=raster_data
            - CLASSPATH=/opt/target/classes
        depends_on:
            - um_server
        tty:
            true  #Keep Container alive, else completes and shuts down

    raster_downloader_demo:
        image: "sauberprojekt/raster_download:20200720_1"
        networks:
            - sauber-network
        secrets:
            - sauber_user_password
            - hhi_rest_user
            - hhi_rest_pw
        environment:
            - SAUBER_USER_PASSWORD_FILE=/run/secrets/sauber_user_password
            - HHI_REST_USER_FILE=/run/secrets/hhi_rest_user
            - HHI_REST_PASSWORD_FILE=/run/secrets/hhi_rest_password
            - DB_USER=sauber_user
            - UM_CHANNEL=raster_data
            - UM_SERVER=um_server:9000
        deploy:
            restart_policy:
                condition: on-failure
        depends_on:
            - um_server
        volumes:
            - raster_data:/raster_data/:Z
        tty:
            true  #Keep Container alive, else completes and shuts down
    

    um-ol-demo:
        image: sauberprojekt/um_ol_demo:20200701_1
        networks:
            - sauber-network
        ports:
            - "9999:80"

    um-js-demo:
        image: sauberprojekt/um_js_demo:20200701_1
        networks:
            - sauber-network
        ports:
            - "9998:80"

    proxy-webserver:
        image: nginx:stable
        ports:
            - "80:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        networks:
            - sauber-network
        depends_on:
            - geoserver
            - um_server
            - um-js-demo

    um-publisher:
        image: um_publisher:latest
        networks:
            - sauber-network
        ports:
            - "9990:80"
